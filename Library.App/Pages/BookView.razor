@page "/books"
@using Library.Shared;
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@if (Books == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        @foreach (var book in Books.ToList())
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@book.BookName</h5>
                        <p class="card-text">@book.Author</p>
                        <p class="card-text">@book.Category</p>
                        <a href="#" class="btn btn-primary">Go somewhere</a>
                    </div>
                </div>
            </div>
        }
    </div>

}


@code {
    static readonly HttpClient _httpClient = new HttpClient();
    static string LibraryApiAddress { get; set; }
    public IEnumerable<Book> Books { get; set; }

    static async Task<IEnumerable<Book>> GetBooks()
    {
        return await JsonSerializer.DeserializeAsync<IEnumerable<Book>>
        (await _httpClient.GetStreamAsync($"{LibraryApiAddress}/api/books"), new JsonSerializerOptions()
        {
            PropertyNameCaseInsensitive = true
        });
    }

    protected async override Task OnInitializedAsync()
    {
        LibraryApiAddress = Configuration["Library.Api.Address"];
        Books = await GetBooks();
    }
}